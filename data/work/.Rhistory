View(patentsAssigneesDynassCompustatWeights)
# Remove unnecessary variables: inventorsAndPatents and compustat
rm(list = c("inventorsAndPatentsAndDynass","compustat"))
# Remove unnecessary variables: inventorsAndPatents and compustat
rm(list = c("inventorsAndPatentsAndDynassCompustat","compustat"))
# Remove unnecessary variables: inventorsAndPatents and compustat
rm(list = c("patentsAndDynassCompustat","compustat"))
# Remove unnecessary variables: inventorsAndPatents and compustat
rm(list = c("patentsAssigneesDynassCompustat","compustat"))
# Remove unnecessary variables: inventorsAndPatents and compustat
rm(list = c("patentsAssigneesDynassCompustat","patentsWeights"))
#### Summarize data
summary(inventorsAndPatentsAndDynassAndCompustat)
#### Summarize data
summary(patentsAssigneesDynassCompustatWeights)
rm(list = setdiff(ls(), lsf.str()))
setwd("/home/nico/nfernand@princeton.edu/PhD - Big boy/Research/Endogenous growth with worker flows and noncompetes/data/work")
## Start timer
ptm <- proc.time()
## Load libraries
library(readstata13)
library(dplyr)
library(tidyr)
source('Code/Functions/stata_merge.R')
## Load in and clean Patents dataset
patents <- read.dta13('Raw/pat76_06_assg.dta')
patents$year <- patents$appyear
patents <- patents %>% rename(assigneeState = state, assigneeCountry = country)
patents <- patents %>% select(patent,pdpass,year,assigneeState,assigneeCountry)
## Load in and clean Inventors datasets
inventors <- read.csv('Raw/inventor.csv')
inventors <- inventors %>% rename(patent = Patent, inventorCountry = Country, inventorZipCode = Zipcode, inventorState = State, inventorCity = City)
# Convert patent # to numeric. Non-utility patents have non-numeric characters, so these become NAs
# and can then be dropped.
inventors$patent <- as.numeric(as.character(inventors$patent))
inventors <- inventors[!is.na(inventors$patent),]
inventors <- inventors %>% select(patent,inventorState,inventorCity,inventorZipCode,inventorCountry)
## Merge datasets
inventorsAndPatents <- merge(patents,inventors,by = "patent")
# Check time
proc.time() - ptm
# Remove unnecessary data: inventors, patents, and unnecessary variables in inventorsAndPatents
rm(list = c("inventors","patents"))
weights <- count(inventorsAndPatents,patent)
weights$weight <- 1/weights$n
weights <- weights %>% select(patent,weight)
inventorsAndPatentsWeights <- merge(inventorsAndPatents,weights,by = c("patent"))
rm(list=c("inventorsAndPatents","weights"))
inventorsAndPatentsWeights$inventorState <- as.character(inventorsAndPatentsWeights$inventorState)
proc.time() - ptm
proc.time() - ptm2
#### Construct dataset with patent number, year, and gvkey
## Load dynass_reshaped
dynass <- read.dta13('Data/dynass_reshaped.dta')
# Clean and diagnose
dynass$gvkey <- as.integer(dynass$gvkey)
dynass <- dynass %>% select(pdpass,gvkey,year)
rm(list = setdiff(ls(), lsf.str()))
setwd("/home/nico/nfernand@princeton.edu/PhD - Big boy/Research/Endogenous growth with worker flows and noncompetes/data/work")
## Start timer
ptm <- proc.time()
## Load libraries
library(readstata13)
library(dplyr)
library(tidyr)
source('Code/Functions/stata_merge.R')
## Load in and clean Patents dataset
patents <- read.dta13('Raw/pat76_06_assg.dta')
patents$year <- patents$appyear
patents <- patents %>% rename(assigneeState = state, assigneeCountry = country)
patents <- patents %>% select(patent,pdpass,year,assigneeState,assigneeCountry)
## Load in and clean Inventors datasets
inventors <- read.csv('Raw/inventor.csv')
inventors <- inventors %>% rename(patent = Patent, inventorCountry = Country, inventorZipCode = Zipcode, inventorState = State, inventorCity = City)
# Convert patent # to numeric. Non-utility patents have non-numeric characters, so these become NAs
# and can then be dropped.
inventors$patent <- as.numeric(as.character(inventors$patent))
inventors <- inventors[!is.na(inventors$patent),]
inventors <- inventors %>% select(patent,inventorState)
patents <- patents %>% select(patent,pdpass,year)
## Merge datasets
inventorsAndPatents <- merge(patents,inventors,by = "patent")
# Check time
proc.time() - ptm
# Remove unnecessary data: inventors, patents, and unnecessary variables in inventorsAndPatents
rm(list = c("inventors","patents"))
weights <- count(inventorsAndPatents,patent)
weights$weight <- 1/weights$n
weights <- weights %>% select(patent,weight)
inventorsAndPatentsWeights <- merge(inventorsAndPatents,weights,by = c("patent"))
rm(list=c("inventorsAndPatents","weights"))
inventorsAndPatentsWeights$inventorState <- as.character(inventorsAndPatentsWeights$inventorState)
proc.time() - ptm
proc.time() - ptm2
#### Construct dataset with patent number, year, and gvkey
## Load dynass_reshaped
dynass <- read.dta13('Data/dynass_reshaped.dta')
# Clean and diagnose
dynass$gvkey <- as.integer(dynass$gvkey)
dynass <- dynass %>% select(pdpass,gvkey,year)
rm(list = setdiff(ls(), lsf.str()))
setwd("/home/nico/nfernand@princeton.edu/PhD - Big boy/Research/Endogenous growth with worker flows and noncompetes/data/work")
## Start timer
ptm <- proc.time()
## Load libraries
library(readstata13)
library(dplyr)
library(tidyr)
source('Code/Functions/stata_merge.R')
## Load in and clean Patents dataset
patents <- read.dta13('Raw/pat76_06_assg.dta')
patents$year <- patents$appyear
patents <- patents %>% rename(assigneeState = state, assigneeCountry = country)
patents <- patents %>% select(patent,pdpass,year)
## Load in and clean Inventors datasets
inventors <- read.csv('Raw/inventor.csv')
inventors <- inventors %>% rename(patent = Patent, inventorCountry = Country, inventorZipCode = Zipcode, inventorState = State, inventorCity = City)
# Convert patent # to numeric. Non-utility patents have non-numeric characters, so these become NAs
# and can then be dropped.
inventors$patent <- as.numeric(as.character(inventors$patent))
inventors <- inventors[!is.na(inventors$patent),]
inventors <- inventors %>% select(patent,inventorState)
## Merge datasets
inventorsPatents <- merge(patents,inventors,by = "patent")
# Check time
proc.time() - ptm
# Remove unnecessary data: inventors, patents, and unnecessary variables in inventorsAndPatents
rm(list = c("inventors","patents"))
weights <- count(inventorsPatents,patent)
weights$weight <- 1/weights$n
weights <- weights %>% select(patent,weight)
inventorsPatentsWeights <- merge(inventorsPatents,weights,by = "patent")
rm(list=c("inventorsPatents","weights"))
inventorsPatentsWeights$inventorState <- as.character(inventorsPatentsWeights$inventorState)
proc.time() - ptm
#### Construct dataset with patent number, year, and gvkey
## Load dynass_reshaped
dynass <- read.dta13('Data/dynass_reshaped.dta')
# Clean and diagnose
dynass$gvkey <- as.integer(dynass$gvkey)
dynass <- dynass %>% select(pdpass,gvkey,year)
## Merge and clean
# Merge
inventorsPatentsWeightsDynass <- merge(inventorsPatentsWeights,dynass,by = c("pdpass","year"))
# Remove unnecessary data: inventorsAndPatents and dynass
rm(list = c("patentsAssignees","dynass"))
# Remove unnecessary data: inventorsAndPatents and dynass
rm(list = c("inventorsPatentsWeights","dynass"))
#### Merge patentsAssigneesDynass with compustat's XRD data
## Load compustat dataset and clean
compustat <- read.dta13('Raw/compustat_annual.dta')
compustat <- compustat %>% select(gvkey,fyear,xrd,state)
compustat$year <- compustat$fyear
compustat$gvkey <- as.integer(compustat$gvkey)
## Merge and clean
inventorsPatentsWeightsCompustat <- merge(inventorsPatentsWeightsDynass,compustat,by = c("gvkey","year"),all.y = TRUE)
rm(list = c("patentsAssignessDynass","compustat"))
rm(list = c("inventorsPatentsWeightsDynass","compustat"))
View(inventorsPatentsWeightsCompustat)
inventorsPatentsWeightsCompustat <- tibble::rowid_to_column(inventorsPatentsWeightsCompustat,"ID")
?mutate
inventorsPatentsWeightsCompustat <- inventorsPatentsWeightsCompustat %>% mutate(inventorState = replace(inventorState, is.na(inventorState), state))
inventorsPatentsWeightsCompustat <- inventorsPatentsWeightsCompustat %>% mutate(inventorState = replace(inventorState, is.na(inventorState), state[is.na(inventorState)]))
View(inventorsPatentsWeightsCompustat)
inventorsPatentsWeightsCompustat <- inventorsPatentsWeightsCompustat %>% mutate(weight = replace(weight, is.na(inventorState), 1))
View(inventorsPatentsWeightsCompustat)
View(inventorsPatentsWeightsCompustat)
inventorsPatentsWeightsCompustat <- inventorsPatentsWeightsCompustat %>% mutate(weight = replace(weight, is.na(patent), 1))
View(inventorsPatentsWeightsCompustat)
compustatWeights <- inventorsPatentsWeightsCompustat %>% select(ID,gvkey,year,inventorState,weight)
inventorsCompustatWeights <- inventorsPatentsWeightsCompustat %>% select(ID,gvkey,year,inventorState,weight)
inventorsPatentsWeightsCompustatWide <- inventorsAndPatentsWeights %>% spread(inventorState,weight)
inventorsWeightsCompustatWide <- inventorsCompustatWeights %>% spread(inventorState,weight)
View(inventorsWeightsCompustatWide)
gvkeyYearWeights <- inventorsWeightsCompustatWide %>% select(-V1,-USA)
gvkeyYearWeights <- inventorsWeightsCompustatWide %>% select(-V1)
# Sum by gvkey-year
gvkeyYearWeights <- patentsWeights %>% group_by(gvkey,year) %>% summarize_all(funs(sum))
# Sum by gvkey-year
gvkeyYearWeights <- gvkeyYearWeights %>% group_by(gvkey,year) %>% summarize_all(funs(sum))
View(gvkeyYearWeights)
inventorsPatentsCompustatWeights <- inventorsPatentsWeightsCompustat %>% select(ID,patent,gvkey,year,inventorState,weight)
inventorsPatentsWeightsCompustatWide <- inventorsPatentsCompustatWeights %>% spread(inventorState,weight)
rm(list = setdiff(ls(), lsf.str()))
setwd("/home/nico/nfernand@princeton.edu/PhD - Big boy/Research/Endogenous growth with worker flows and noncompetes/data/work")
## Start timer
ptm <- proc.time()
## Load libraries
library(readstata13)
library(dplyr)
library(tidyr)
source('Code/Functions/stata_merge.R')
## Load in and clean Patents dataset
patents <- read.dta13('Raw/pat76_06_assg.dta')
patents$year <- patents$appyear
patents <- patents %>% rename(assigneeState = state, assigneeCountry = country)
patents <- patents %>% select(patent,pdpass,year)
## Load in and clean Inventors datasets
inventors <- read.csv('Raw/inventor.csv')
inventors <- inventors %>% rename(patent = Patent, inventorCountry = Country, inventorZipCode = Zipcode, inventorState = State, inventorCity = City)
# Convert patent # to numeric. Non-utility patents have non-numeric characters, so these become NAs
# and can then be dropped.
inventors$patent <- as.numeric(as.character(inventors$patent))
inventors <- inventors[!is.na(inventors$patent),]
inventors <- inventors %>% select(patent,inventorState)
## Merge datasets
inventorsPatents <- merge(patents,inventors,by = "patent")
# Check time
proc.time() - ptm
# Remove unnecessary data: inventors, patents, and unnecessary variables in inventorsAndPatents
rm(list = c("inventors","patents"))
weights <- count(inventorsPatents,patent)
weights$weight <- 1/weights$n
weights <- weights %>% select(patent,weight)
inventorsPatentsWeights <- merge(inventorsPatents,weights,by = "patent")
rm(list=c("inventorsPatents","weights"))
inventorsPatentsWeights$inventorState <- as.character(inventorsPatentsWeights$inventorState)
proc.time() - ptm
#### Construct dataset with patent number, year, and gvkey
## Load dynass_reshaped
dynass <- read.dta13('Data/dynass_reshaped.dta')
# Clean and diagnose
dynass$gvkey <- as.integer(dynass$gvkey)
dynass <- dynass %>% select(pdpass,gvkey,year)
## Merge and clean
# Merge
inventorsPatentsWeightsDynass <- merge(inventorsPatentsWeights,dynass,by = c("pdpass","year"))
# Remove unnecessary data: inventorsAndPatents and dynass
rm(list = c("inventorsPatentsWeights","dynass"))
#### Merge patentsAssigneesDynass with compustat's XRD data
## Load compustat dataset and clean
compustat <- read.dta13('Raw/compustat_annual.dta')
compustat <- compustat %>% select(gvkey,fyear,xrd,state)
compustat$year <- compustat$fyear
compustat$gvkey <- as.integer(compustat$gvkey)
## Merge and clean
inventorsPatentsWeightsCompustat <- merge(inventorsPatentsWeightsDynass,compustat,by = c("gvkey","year"),all.y = TRUE)
rm(list = c("inventorsPatentsWeightsDynass","compustat"))
inventorsPatentsWeightsCompustat <- tibble::rowid_to_column(inventorsPatentsWeightsCompustat,"ID")
inventorsPatentsWeightsCompustat <- inventorsPatentsWeightsCompustat %>% mutate(weight = replace(weight, is.na(inventorState), 1))
inventorsPatentsWeightsCompustat <- inventorsPatentsWeightsCompustat %>% mutate(inventorState = replace(inventorState, is.na(inventorState), state[is.na(inventorState)]))
inventorsPatentsCompustatWeights <- inventorsPatentsWeightsCompustat %>% select(ID,patent,gvkey,year,inventorState,weight)
inventorsPatentsWeightsCompustatWide <- inventorsPatentsCompustatWeights %>% spread(inventorState,weight)
rm(inventorsPatentsWeightsCompustat)
rm(inventorsPatentsWeightsCompustatWide)
inventorsPatentsCompustatWeights <- inventorsPatentsWeightsCompustat %>% select(ID,patent,gvkey,year,inventorState,weight)
rm(list = setdiff(ls(), lsf.str()))
setwd("/home/nico/nfernand@princeton.edu/PhD - Big boy/Research/Endogenous growth with worker flows and noncompetes/data/work")
## Start timer
ptm <- proc.time()
## Load libraries
library(readstata13)
library(dplyr)
library(tidyr)
source('Code/Functions/stata_merge.R')
## Load in and clean Patents dataset
patents <- read.dta13('Raw/pat76_06_assg.dta')
patents$year <- patents$appyear
patents <- patents %>% rename(assigneeState = state, assigneeCountry = country)
patents <- patents %>% select(patent,pdpass,year)
## Load in and clean Inventors datasets
inventors <- read.csv('Raw/inventor.csv')
inventors <- inventors %>% rename(patent = Patent, inventorCountry = Country, inventorZipCode = Zipcode, inventorState = State, inventorCity = City)
# Convert patent # to numeric. Non-utility patents have non-numeric characters, so these become NAs
# and can then be dropped.
inventors$patent <- as.numeric(as.character(inventors$patent))
inventors <- inventors[!is.na(inventors$patent),]
inventors <- inventors %>% select(patent,inventorState)
## Merge datasets
inventorsPatents <- merge(patents,inventors,by = "patent")
# Check time
proc.time() - ptm
# Remove unnecessary data: inventors, patents, and unnecessary variables in inventorsAndPatents
rm(list = c("inventors","patents"))
weights <- count(inventorsPatents,patent)
weights$weight <- 1/weights$n
weights <- weights %>% select(patent,weight)
inventorsPatentsWeights <- merge(inventorsPatents,weights,by = "patent")
rm(list=c("inventorsPatents","weights"))
inventorsPatentsWeights$inventorState <- as.character(inventorsPatentsWeights$inventorState)
proc.time() - ptm
#### Construct dataset with patent number, year, and gvkey
## Load dynass_reshaped
dynass <- read.dta13('Data/dynass_reshaped.dta')
# Clean and diagnose
dynass$gvkey <- as.integer(dynass$gvkey)
dynass <- dynass %>% select(pdpass,gvkey,year)
## Merge and clean
# Merge
inventorsPatentsWeightsDynass <- merge(inventorsPatentsWeights,dynass,by = c("pdpass","year"))
# Remove unnecessary data: inventorsAndPatents and dynass
rm(list = c("inventorsPatentsWeights","dynass"))
#### Merge patentsAssigneesDynass with compustat's XRD data
## Load compustat dataset and clean
compustat <- read.dta13('Raw/compustat_annual.dta')
compustat <- compustat %>% select(gvkey,fyear,xrd,state)
compustat$year <- compustat$fyear
compustat$gvkey <- as.integer(compustat$gvkey)
## Merge and clean
inventorsPatentsWeightsCompustat <- merge(inventorsPatentsWeightsDynass,compustat,by = c("gvkey","year"),all.y = TRUE)
rm(list = c("inventorsPatentsWeightsDynass","compustat"))
inventorsPatentsWeightsCompustat <- tibble::rowid_to_column(inventorsPatentsWeightsCompustat,"ID")
inventorsPatentsWeightsCompustat <- inventorsPatentsWeightsCompustat %>% mutate(weight = replace(weight, is.na(inventorState), 1))
inventorsPatentsWeightsCompustat <- inventorsPatentsWeightsCompustat %>% mutate(inventorState = replace(inventorState, is.na(inventorState), state[is.na(inventorState)]))
inventorsPatentsWeightsCompustat <- inventorsPatentsWeightsCompustat %>% select(ID,gvkey,year,inventorState,weight)
inventorsPatentsWeightsCompustatWide <- inventorsPatentsWeightsCompustat %>% spread(inventorState,weight)
# Extract just weights
gvkeyYearWeights <- inventorsWeightsCompustatWide %>% select(-V1)
# Extract just weights
gvkeyYearWeights <- inventorsPatentsWeightsCompustatWide %>% select(-V1)
# Sum by gvkey-year
gvkeyYearWeights <- gvkeyYearWeights %>% group_by(gvkey,year) %>% summarize_all(funs(sum))
View(gvkeyYearWeights)
View(inventorsPatentsWeightsCompustat)
View(inventorsPatentsWeightsCompustatWide)
View(inventorsPatentsWeightsCompustat)
View(inventorsPatentsWeightsCompustat)
View(inventorsPatentsWeightsCompustatWide)
View(inventorsPatentsWeightsCompustat)
# Extract just weights
gvkeyYearWeights <- inventorsPatentsWeightsCompustatWide %>% select(-V1)
# Sum by gvkey-year
gvkeyYearWeights <- gvkeyYearWeights %>% group_by(gvkey,year) %>% summarize_all(funs(sum))
rm(list = setdiff(ls(), lsf.str()))
setwd("/home/nico/nfernand@princeton.edu/PhD - Big boy/Research/Endogenous growth with worker flows and noncompetes/data/work")
## Start timer
ptm <- proc.time()
## Load libraries
library(readstata13)
library(dplyr)
library(tidyr)
source('Code/Functions/stata_merge.R')
#### Merge Patents and Inventors Datasets by Patent #
## Load in and clean Patents dataset
patents <- read.dta13('Raw/pat76_06_assg.dta')
patents$year <- patents$appyear
patents <- patents %>% rename(assigneeState = state, assigneeCountry = country)
patents <- patents %>% select(patent,pdpass,year)
## Load in and clean Inventors datasets
inventors <- read.csv('Raw/inventor.csv')
inventors <- inventors %>% rename(patent = Patent, inventorCountry = Country, inventorZipCode = Zipcode, inventorState = State, inventorCity = City)
# Convert patent # to numeric. Non-utility patents have non-numeric characters, so these become NAs
# and can then be dropped.
inventors$patent <- as.numeric(as.character(inventors$patent))
inventors <- inventors[!is.na(inventors$patent),]
inventors <- inventors %>% select(patent,inventorState)
## Merge datasets
inventorsPatents <- merge(patents,inventors,by = "patent")
# Check time
proc.time() - ptm
# Remove unnecessary data: inventors, patents, and unnecessary variables in inventorsAndPatents
rm(list = c("inventors","patents"))
#############
###########
## Construction of patent-level geographic distribution
#
## Algorithm:
#
# Create new variable, inventorCount, that counts number of inventors
# for each patent (i.e. count # of observations per patent)
# Then invert - this is now the weight
# assigned to each patent-city observation.
#
###########
############
weights <- count(inventorsPatents,patent)
weights$weight <- 1/weights$n
weights <- weights %>% select(patent,weight)
inventorsPatentsWeights <- merge(inventorsPatents,weights,by = "patent")
rm(list=c("inventorsPatents","weights"))
inventorsPatentsWeights$inventorState <- as.character(inventorsPatentsWeights$inventorState)
proc.time() - ptm
## Have to now load in dynass and merge with compustat. The reason is that
## this allows me to modify the variable inventorState = assigneeState for
## <gvkey>-<year> pairs that do not have a patent.
#### Construct dataset with patent number, year, and gvkey
## Load dynass_reshaped
dynass <- read.dta13('Data/dynass_reshaped.dta')
# Clean and diagnose
dynass$gvkey <- as.integer(dynass$gvkey)
dynass <- dynass %>% select(pdpass,gvkey,year)
## Merge and clean
# Merge
inventorsPatentsWeightsDynass <- merge(inventorsPatentsWeights,dynass,by = c("pdpass","year"))
# Remove unnecessary data: inventorsAndPatents and dynass
rm(list = c("inventorsPatentsWeights","dynass"))
#### Merge patentsAssigneesDynass with compustat's XRD data
## Load compustat dataset and clean
compustat <- read.dta13('Raw/compustat_annual.dta')
compustat <- compustat %>% select(gvkey,fyear,xrd,state)
compustat$year <- compustat$fyear
compustat$gvkey <- as.integer(compustat$gvkey)
## Merge and clean
inventorsPatentsWeightsCompustat <- merge(inventorsPatentsWeightsDynass,compustat,by = c("gvkey","year"),all.y = TRUE)
rm(list = c("inventorsPatentsWeightsDynass","compustat"))
inventorsPatentsWeightsCompustat <- tibble::rowid_to_column(inventorsPatentsWeightsCompustat,"ID")
inventorsPatentsWeightsCompustat <- inventorsPatentsWeightsCompustat %>% mutate(weight = replace(weight, is.na(inventorState), 1))
inventorsPatentsWeightsCompustat <- inventorsPatentsWeightsCompustat %>% mutate(inventorState = replace(inventorState, is.na(inventorState), state[is.na(inventorState)]))
# Spread to make column for each state's weight
inventorsPatentsWeightsCompustat <- inventorsPatentsWeightsCompustat %>% select(ID,gvkey,xrd,year,inventorState,weight)
inventorsPatentsWeightsCompustatWide <- inventorsPatentsWeightsCompustat %>% spread(inventorState,weight)
# Extract just weights
gvkeyYearWeights <- inventorsPatentsWeightsCompustatWide %>% select(-V1)
# Sum by gvkey-year
gvkeyYearWeights <- gvkeyYearWeights %>% group_by(gvkey,year) %>% summarize_all(funs(sum))
View(gvkeyYearWeights)
?mutate_at
rm(gvkeyYearWeights)
# Extract just weights
gvkeyXrdYearWeights <- inventorsPatentsWeightsCompustatWide %>% select(-V1)
# Sum by gvkey-year
gvkeyXrdYearWeights <- gvkeyXrdYearWeights %>% group_by(gvkey,year) %>% summarize_all(funs(sum))
# Multiply xrd by all weight columns
gvkeyXrdYearWeights[,4:end] <- gvkeyXrdYearWeights$xrd * gvkeyXrdYearWeights[,4:end]
View(gvkeyXrdYearWeights)
inventorsPatentsWeightsCompustat <- inventorsPatentsWeightsCompustat %>% select(ID,gvkey,patent,xrd,year,inventorState,weight)
View(inventorsPatentsWeightsCompustatWide)
View(inventorsPatentsWeightsCompustatWide)
View(inventorsPatentsWeightsCompustat)
View(inventorsPatentsWeightsCompustatWide)
View(gvkeyXrdYearWeights)
gvkeyXrdYearWeights <- gvkeyXrdYearWeights %>% mutate_all(funs(replace(.,is.na(.),0)))
View(gvkeyXrdYearWeights)
# Extract just weights
gvkeyXrdYearWeights <- inventorsPatentsWeightsCompustatWide %>% select(-V1)
# Sum by gvkey-year
gvkeyXrdYearWeights <- gvkeyXrdYearWeights %>% group_by(gvkey,year) %>% summarize_all(funs(sum))
gvkeyXrdYearWeights <- gvkeyXrdYearWeights %>% mutate_all(funs(replace(.,is.na(.),0)))
View(gvkeyXrdYearWeights)
gvkeyXrdYearWeights[,4:end] <- gvkeyXrdYearWeights$xrd * gvkeyXrdYearWeights[,4:end]
gvkeyXrdYearWeights[,4:68] <- gvkeyXrdYearWeights$xrd * gvkeyXrdYearWeights[,4:68]
View(gvkeyXrdYearWeights)
gvkeyXrdYearWeights[,82]
gvkeyXrdYearWeights[82,]
temp <- gvkeyXrdYearWeights[82,]
View(temp)
# Extract just weights
gvkeyXrdYearWeights <- inventorsPatentsWeightsCompustatWide %>% select(-V1)
# Sum by gvkey-year
gvkeyXrdYearWeights <- gvkeyXrdYearWeights %>% group_by(gvkey,year) %>% summarize_all(funs(sum))
gvkeyXrdYearWeights <- gvkeyXrdYearWeights %>% mutate_all(funs(replace(.,is.na(.),0)))
temp <- gvkeyXrdYearWeights[,4:68 := lapply(.SD, "*", xrd), .SDcols = 4:68][]
dtcopy = copy(gvkeyXrdYearWeights)
library(data.table)
install.packages("data.table")
library(data.table)
install.packages("data.table")
library(data.table)
rm(temp)
install.packages("data.table")
rm(gvkeyXrdYear)
rm(gvkeyXrdYearWeights)
install.packages("data.table")
rm(inventorsPatentsWeightsCompustatWide)
install.packages("data.table")
#### Merge Patents and Inventors Datasets by Patent #
install.packages(data.table)
#### Merge Patents and Inventors Datasets by Patent #
install.packages("data.table"")
#### Merge Patents and Inventors Datasets by Patent #
install.packages("data.table")
## Load in and clean Patents dataset
patents <- read.dta13('Raw/pat76_06_assg.dta')
#### Merge Patents and Inventors Datasets by Patent #
install.packages("data.table")
#### Merge Patents and Inventors Datasets by Patent #
install.packages("data.table")
gvkeyXrdYearWeights[,4:68] <- gvkeyXrdYearWeights$xrd * gvkeyXrdYearWeights[,4:68]
rm(patents)
# Extract just weights
gvkeyXrdYearWeights <- inventorsPatentsWeightsCompustatWide %>% select(-V1)
inventorsPatentsWeightsCompustatWide <- inventorsPatentsWeightsCompustat %>% spread(inventorState,weight)
# Extract just weights
gvkeyXrdYearWeights <- inventorsPatentsWeightsCompustatWide %>% select(-V1)
# Sum by gvkey-year
gvkeyXrdYearWeights <- gvkeyXrdYearWeights %>% group_by(gvkey,year) %>% summarize_all(funs(sum))
gvkeyXrdYearWeights <- gvkeyXrdYearWeights %>% mutate_all(funs(replace(.,is.na(.),0)))
gvkeyXrdYearWeights[,4:68] <- gvkeyXrdYearWeights[["xrd"]] * gvkeyXrdYearWeights[,4:68]
View(gvkeyXrdYearWeights)
temp <- gvkeyXrdYearWeights[82,]
View(temp)
View(gvkeyXrdYearWeights)
gvkeyXrdYearWeights[,4:68] <- gvkeyXrdYearWeights[,c("xrd")] * gvkeyXrdYearWeights[,4:68]
# Extract just weights
gvkeyXrdYearWeights <- inventorsPatentsWeightsCompustatWide %>% select(-V1)
# Sum by gvkey-year
gvkeyXrdYearWeights <- gvkeyXrdYearWeights %>% group_by(gvkey,year) %>% summarize_all(funs(sum))
gvkeyXrdYearWeights <- gvkeyXrdYearWeights %>% mutate_all(funs(replace(.,is.na(.),0)))
# Clean up
rm(inventorsAndPatentsWeights)
### Aggregate weights for each state by patent
# Extract just weights
patentsWeights <- inventorsAndPatentsWeightsWide %>% select(-pdpass,-year,-assigneeState,-assigneeCountry,-inventorCountry,-inventorCity,-inventorZipCode)
gvkeyXrdYearWeights[,i] <- gvkeyXrdYearWeights[,3] * gvkeyXrdYearWeights[,i]
for (i in 4:68) {
gvkeyXrdYearWeights[,i] <- gvkeyXrdYearWeights[,3] * gvkeyXrdYearWeights[,i]
}
View(gvkeyXrdYearWeights)
temp <- gvkeyXrdYearWeights[82,]
View(temp)
View(inventorsPatentsWeightsCompustatWide)
# Extract just weights
gvkeyXrdYearWeights <- inventorsPatentsWeightsCompustatWide %>% select(-V1)
# Sum by gvkey-year
gvkeyXrdYearWeights <- gvkeyXrdYearWeights %>% group_by(gvkey,year) %>% summarize_all(funs(sum))
View(gvkeyXrdYearWeights)
gvkeyXrdYearWeights <- gvkeyXrdYearWeights %>% mutate_all(funs(replace(.,is.na(.),0)))
gvkeyXrdYearWeights <- ungroup(gvkeyXrdYearWeights)
for (i in 4:68) {
gvkeyXrdYearWeights[,i] <- gvkeyXrdYearWeights[,3] * gvkeyXrdYearWeights[,i]
}
View(gvkeyXrdYearWeights)
