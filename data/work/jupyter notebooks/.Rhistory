library(tidyverse)
library(tidyquant)
install.packages(tidyquant)
install.packages("tidyquant")
install.packages("tidyquant")
install.packages("parallel")
library("parallel")
# Merges pat76_06_assg.dta and inventor.csv by patent #
# merges with dynass_reshaped by pdpass, identification in NBER / Compustat bridge. this brings in gvkey.
# merges with compustat by year using gvkey
#
# Uses the resulting dataset to compute state-level measures of each gvkey-year R&D expenditures
# and then aggregates this to provide state-level measures of R&D by public firms.
#
# Algorithm: see README.
#
#####################################################
#### Preamble #######################################
#####################################################
rm(list = setdiff(ls(), lsf.str()))
setwd("/home/nico/nfernand@princeton.edu/PhD - Big boy/Research/Endogenous growth with worker flows and noncompetes/data/work")
## Load libraries and auxiliary functions
library(profvis)
library(readstata13)
library(plyr)
library(dplyr)
library(tidyr)
library(data.table)
library(plm)
source('Code/Functions/stata_merge.R')
#profvis({
#####################################################
#### Merge Patents and Inventors Datasets by Patent #
#####################################################
##### Load in and clean patents dataset
patents <- fread('Data/patents.csv')
patents <- patents %>% dplyr::rename(year = appyear, assigneeState = state, assigneeCountry = country
View(patents)
View(patents)
data <- read.dta13('Raw/assignee.dta')
source('~/.active-rstudio-document', echo=TRUE)
View(data)
data("EmplUK", package = "plm")
## Arellano and Bond (1991), table 4 col. b
z1 <- pgmm(log(emp) ~ lag(log(emp), 1:2) + lag(log(wage), 0:1)
+ log(capital) + lag(log(output), 0:1) | lag(log(emp), 2:99),
data = EmplUK, effect = "twoways", model = "twosteps")
summary(z1)
#library(repr)
library(ggplot2)
library(plm)
library(plyr)
library(dplyr)
library(tidyr)
library(data.table)
#library(clubSandwich) #for clustered standard errors
#library(lmtest)
data <- fread("../Data/yearStateXrd-RDUserCost-GDP-firmEntryMeasures_stateLevel_compustatAggregation.csv")
#---------------------------------#
# Load main data
#---------------------------------#
setwd("/home/nico/nfernand@princeton.edu/PhD - Big boy/Research/Endogenous growth with worker flows and noncompetes/data/work/jupyter notebooks")
data <- fread("../Data/yearStateXrd-RDUserCost-GDP-firmEntryMeasures_stateLevel_compustatAggregation.csv")
rm(list = ls())
#---------------------------------#
# Load libraries
#---------------------------------#
#library(repr)
library(ggplot2)
library(plm)
library(plyr)
library(dplyr)
library(tidyr)
library(data.table)
#library(clubSandwich) #for clustered standard errors
#library(lmtest)
#library(Hmisc) #for constructing latex tables
#library(stargazer) # ibid
#---------------------------------#
# Load main data
#---------------------------------#
setwd("/home/nico/nfernand@princeton.edu/PhD - Big boy/Research/Endogenous growth with worker flows and noncompetes/data/work/jupyter notebooks")
data <- fread("../Data/yearStateXrd-RDUserCost-GDP-firmEntryMeasures_stateLevel_compustatAggregation.csv")
rm(list = ls())
#---------------------------------#
# Load libraries
#---------------------------------#
#library(repr)
library(ggplot2)
library(plm)
library(plyr)
library(dplyr)
library(tidyr)
library(data.table)
#library(clubSandwich) #for clustered standard errors
#library(lmtest)
#library(Hmisc) #for constructing latex tables
#library(stargazer) # ibid
#---------------------------------#
# Load and slightly clean main data
#---------------------------------#
setwd("/home/nico/nfernand@princeton.edu/PhD - Big boy/Research/Endogenous growth with worker flows and noncompetes/data/work/jupyter notebooks")
data <- fread("../Data/yearStateXrd-RDUserCost-GDP-firmEntryMeasures_stateLevel_compustatAggregation.csv")
data <- data %>% rename(normalizationType = IndustryId)
data <- data[normalizationType == 1]
data <- data %>% select(state,year,Firms,firmsTotal,
Estabs,estabsTotal,Emp,
empTotal,xrd,xrdRaw,GDP,rho_high)
data <- copy(data)
#---------------------------------#
# Load NSF IRIS data
#---------------------------------#
temp <- fread("../Data/yearStateXRD_NSFaggregate.csv")
#---------------------------------#
# Merge
#---------------------------------#
setkey(data,state,year)
setkey(temp,state,year)
data <- merge(data,temp)
#---------------------------------#
# Construct normalized variables
#---------------------------------#
data[,firmsNorm := Firms / firmsTotal]
data[,estabsNorm := Estabs / estabsTotal]
data[,empNorm := Emp / empTotal]
data[,firmsGDP := Firms / gdpBusinessNSF]
data[,estabsGDP := Estabs / gdpBusinessNSF]
data[,empGDP := Emp / gdpBusinessNSF]
data[,xrdGDP := xrd / gdpBusinessNSF]
data[,xrdRawGDP := xrdRaw / gdpBusinessNSF]
data[,xrdBusinessNSF_gdpBusinessNSF := xrdBusinessNSF / gdpBusinessNSF]
data[,xrdBusinessNSF_gdpTotalNSF := xrdBusinessNSF / gdpTotalNSF]
data[,xrdTotalNSF_gdpTotalNSF := xrdTotalNSF / gdpTotalNSF]
rm(temp)
names(data)
dataPanel <- pdata.frame(data, index = c("state","year"))
model1 <- pgmm(formula = firmsGDP ~ plm::lag(xrdGDP,0:5) | plm::lag(rho_high,0:5),
data = dataPanel, effect = "twoways", model = "onestep")
model1 <- pgmm(formula = firmsGDP ~ plm::lag(xrdGDP,0:5) | plm::lag(rho_high,0:5),
data = dataPanel, effect = "twoways")
model1 <- pgmm(formula = firmsGDP ~ xrdGDP | rho_high,
data = dataPanel, effect = "twoways")
model1 <- pgmm(formula = firmsGDP ~ xrdGDP | rho_high | xrdGDP,
data = dataPanel, effect = "twoways")
model1 <- pgmm(formula = firmsGDP ~ xrdGDP | rho_high | xrdGDP, na.action = na.exclude
data = dataPanel, effect = "twoways")
model1 <- pgmm(formula = firmsGDP ~ xrdGDP | rho_high | xrdGDP, na.action = exclude
data = dataPanel, effect = "twoways")
model1 <- pgmm(formula = firmsGDP ~ xrdGDP | rho_high | xrdGDP, na.action = exclude,
data = dataPanel, effect = "twoways")
model1 <- pgmm(formula = firmsGDP ~ xrdGDP | rho_high | xrdGDP, na.action = NULL,
data = dataPanel, effect = "twoways")
rm(list = ls())
remove.packages("plm")
library(plm)
remove.packages("plm")
library(plm)
## Run this only one time!
#---------------------------------#
# Clear workspace
#---------------------------------#
rm(list = ls())
#---------------------------------#
# Load libraries
#---------------------------------#
#library(repr)
library(ggplot2)
library(plm)
library(plyr)
library(dplyr)
library(tidyr)
library(data.table)
#library(clubSandwich) #for clustered standard errors
#library(lmtest)
#library(Hmisc) #for constructing latex tables
#library(stargazer) # ibid
#---------------------------------#
# Load and slightly clean main data
#---------------------------------#
setwd("/home/nico/nfernand@princeton.edu/PhD - Big boy/Research/Endogenous growth with worker flows and noncompetes/data/work/jupyter notebooks")
data <- fread("../Data/yearStateXrd-RDUserCost-GDP-firmEntryMeasures_stateLevel_compustatAggregation.csv")
data <- data %>% rename(normalizationType = IndustryId)
data <- data[normalizationType == 1]
data <- data %>% select(state,year,Firms,firmsTotal,
Estabs,estabsTotal,Emp,
empTotal,xrd,xrdRaw,GDP,rho_high)
data <- copy(data)
#---------------------------------#
# Load NSF IRIS data
#---------------------------------#
temp <- fread("../Data/yearStateXRD_NSFaggregate.csv")
#---------------------------------#
# Merge
#---------------------------------#
setkey(data,state,year)
setkey(temp,state,year)
data <- merge(data,temp)
rm(temp)
#---------------------------------#
# Construct normalized variables
#---------------------------------#
data[,firmsNorm := Firms / firmsTotal]
data[,estabsNorm := Estabs / estabsTotal]
data[,empNorm := Emp / empTotal]
data[,firmsGDP := Firms / gdpBusinessNSF]
data[,estabsGDP := Estabs / gdpBusinessNSF]
data[,empGDP := Emp / gdpBusinessNSF]
data[,xrdGDP := xrd / gdpBusinessNSF]
data[,xrdRawGDP := xrdRaw / gdpBusinessNSF]
data[,xrdBusinessNSF_gdpBusinessNSF := xrdBusinessNSF / gdpBusinessNSF]
data[,xrdBusinessNSF_gdpTotalNSF := xrdBusinessNSF / gdpTotalNSF]
data[,xrdTotalNSF_gdpTotalNSF := xrdTotalNSF / gdpTotalNSF]
#---------------------------------#
# Set as panel data and run GMM IV regression
#---------------------------------#
dataPanel <- pdata.frame(data, index = c("state","year"))
model1 <- pgmm(formula = firmsGDP ~ xrdGDP | rho_high | xrdGDP, na.action = NULL,
data = dataPanel, effect = "twoways")
quit()
