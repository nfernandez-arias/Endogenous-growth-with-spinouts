# e.g. (1) whether they achieve revenue, (2) how much funding they receive, (3) whether they IPO, (4) IPO market capitalization
source("code/constructSpinoutAttributes.R")
# Construct database of spinouts and their attributes:
# e.g. (1) whether they achieve revenue, (2) how much funding they receive, (3) whether they IPO, (4) IPO market capitalization
source("code/constructSpinoutAttributes.R")
source("code/constructSpinoutCounts.R")
# Combine with data on R&D from compustat_annual
source("code/mergeRDwithSpinoutCounts.R")
# Merge with compustat-patent data
source("code/mergePatents_RD-Spinouts.R")
# Add variable encoding whether state has been trated by non-compete enforcement
# using Jeffers' court rulings dates
source("code/addNoncompeteEnforcementChanges.R")
# Add variable encoding state-level strength of non-compete enforcement from Bishara 2011 / Starr 2018
source("code/addNoncompeteEnforcementIndices.R")
# Only run the first time, because it takes a while
source("code/constructFirmSpecificNCchanges.R")
source("code/mergeFirmNCchangesToMasterData.R")
# Next, prepare the data for panel regressions in Stata
source("code/prepareDataForStata.R")
source("code/linkBiosToCompustat2.R")
# Construct database of spinouts and their attributes:
# e.g. (1) whether they achieve revenue, (2) how much funding they receive, (3) whether they IPO, (4) IPO market capitalization
source("code/constructSpinoutAttributes.R")
source("code/constructSpinoutCounts.R")
# Combine with data on R&D from compustat_annual
source("code/mergeRDwithSpinoutCounts.R")
# Merge with compustat-patent data
source("code/mergePatents_RD-Spinouts.R")
# Add variable encoding whether state has been trated by non-compete enforcement
# using Jeffers' court rulings dates
source("code/addNoncompeteEnforcementChanges.R")
# Add variable encoding state-level strength of non-compete enforcement from Bishara 2011 / Starr 2018
source("code/addNoncompeteEnforcementIndices.R")
source("code/mergeFirmNCchangesToMasterData.R")
# Next, prepare the data for panel regressions in Stata
source("code/prepareDataForStata.R")
#------------------------------------------------#
#
# File name: linkBiosToCompustat2.R
#
# Author: Nicolas Fernandez-Arias
#
# Purpose:
#
# This script links EntityNames to the Compustat database
# to find parent firms.
#------------------------------------------------#
rm(list = ls())
library(data.table)
library(lubridate)
compustatFirmsSegments <- fread("data/compustat/firmsSegments.csv")
compustatFirmsSegments[tic == "IBM", conml := "IBM"]
compustatFirmsSegments[tic == "GS", conml := "Goldman Sachs"]
compustatFirmsSegments[tic == "HPQ", conml := "Hewlett-Packard"]
compustatFirmsSegments[snms == "HP", snms := ""]
compustatFirmsSegments <- compustatFirmsSegments[ , .(gvkey,state,city,cusip,naics,NAICSS1,NAICSS2,dataYear,conml,snms,tic)]
compustatFirmsSegments[ , conml := gsub("[.]$","",conml), by = gvkey]
compustatFirmsSegments[ , conml := gsub("( Inc| Corp| LLC| Ltd| Co| LP)$","",conml), by = gvkey]
compustatFirmsSegments[ , conml := tolower(conml)]
EntitiesPrevEmployers <- fread("data/VentureSource/EntitiesPrevEmployers.csv")[foundingYear >= 1986]
#EntitiesPrevEmployers[ , foundingYear := pmin(na.omit(year(ymd(JoinDate))),na.omit(year(ymd(StartDate)))), by = .(EntityID)]
EntitiesPrevEmployers[ , joinYear := as.integer(year(ymd(JoinDate)))]
EntitiesPrevEmployers[ is.na(joinYear) , joinYear := foundingYear]
EntitiesPrevEmployers <- EntitiesPrevEmployers[!is.na(PreviousEmployer) & PreviousEmployer != ""]
## Prepare data
EntitiesPrevEmployers <- EntitiesPrevEmployers[, .(EntityID,founder2,EntityName,IndustryCodeDesc,SubcodeDesc,foundingYear,FirstName,LastName,joinYear,Title,TitleCode,PreviousEmployer)]
EntitiesPrevEmployers[ PreviousEmployer == "Cisco", PreviousEmployer := "Cisco Systems"]
EntitiesPrevEmployers[ PreviousEmployer == "Amazon", PreviousEmployer := "Amazon.com"]
EntitiesPrevEmployers[ PreviousEmployer == "Yahoo" | PreviousEmployer == "Yahoo!", PreviousEmployer :=  "Verizon"]
EntitiesPrevEmployers[ , PreviousEmployer := gsub("( )?(_x000D_)?(\n)?( )?(_x000D_)?(\n)?( )?_x000D_\n$","",PreviousEmployer), by = PreviousEmployer]
EntitiesPrevEmployers[ , PreviousEmployer := gsub("[.]$","",PreviousEmployer), by = PreviousEmployer]
EntitiesPrevEmployers[ , PreviousEmployer := gsub("( Inc| Corp| LLC| Ltd| Co| LP)$","",PreviousEmployer), by = PreviousEmployer]
EntitiesPrevEmployers[ , PreviousEmployer := gsub("[ ]?[(].*[)]$","",PreviousEmployer), by = PreviousEmployer]
EntitiesPrevEmployers[ , PreviousEmployer := gsub("^Google.*$","Google",PreviousEmployer), by = PreviousEmployer]
EntitiesPrevEmployers[ , PreviousEmployer := tolower(PreviousEmployer)]
# Initial merge
firms <- unique(compustatFirmsSegments,by = "gvkey")[ , .(gvkey,conml,tic,cusip,state,city,naics) ]
EntitiesPrevEmployers[ , count := .N, by = c("PreviousEmployer","joinYear")]
EntitiesPrevEmployers[ , globCount := .N, by = PreviousEmployer]
prevEmployers <- unique(EntitiesPrevEmployers, by = c("PreviousEmployer","joinYear"))[ , .(PreviousEmployer,joinYear,count,globCount)]
#setkey(prevEmployers,PreviousEmployer)
setkey(firms,conml)
firmsPrevEmployers <- firms[,.(gvkey,conml)][prevEmployers]
matched <- firmsPrevEmployers[ !is.na(gvkey)][ , .(gvkey,conml,joinYear,count,globCount)]
unmatched <- firmsPrevEmployers[ is.na(gvkey)][ , .(conml,joinYear,count,globCount)]
matched[ , source := "regex"]
## Merge using compustat segments data
segments <- unique(compustatFirmsSegments, by = "snms")[ , .(gvkey,snms)]
segments[ , snms := tolower(snms)]
setkey(segments,snms)
#setkey(unmatched,conml)
unmatched <- segments[unmatched]
matchedSegments <- unmatched[!is.na(gvkey)]
unmatched <- unmatched[is.na(gvkey)][ , .(snms,joinYear,count,globCount)]
matchedSegments[ , source := "compustat segments"]
firmsTickers <- fread("data/firmsTickersAltDG.csv")
firmsTickers[, query := tolower(query)]
firmsTickers <- unique(firmsTickers, by = "query")
setkey(firmsTickers,query)
unmatched <- firmsTickers[unmatched]
matchedQueries <- unmatched[!is.na(Ticker)]
unmatched <- unmatched[is.na(Ticker)][ , .(query,joinYear,count,globCount)]
matchedQueries[ , source := "altdg"]
# Merge matched queries to firms via ticker symbol
setkey(matchedQueries,Ticker)
setkey(firms,tic)
matchedQueries <- firms[matchedQueries][, .(gvkey,query,count,globCount,joinYear,source)][ !is.na(gvkey)]
## Change names to query
setnames(matched,"conml","name")
setnames(matchedSegments,"snms","name")
setnames(matchedQueries,"query","name")
matched <- rbind(matched,matchedSegments,matchedQueries)
#matched <- rbind(matched,matchedSegments)
### Now match back to EntitiesPrevEmployers
setkey(matched,gvkey)
setkey(firms,gvkey)
matched <- firms[matched]
### Check matches for accuracy
library(stringdist)
# First build matches that are not due to regex
matchedDist <- matched[stringdist(conml,name) > 0]
# Remove matches where one string is a subset of the other
matchedDist <- matchedDist[mapply(grepl,conml,name) == FALSE & mapply(grepl,name,conml) == FALSE]
# Next order by largest count
matchedDist <- matchedDist[order(-globCount,name,joinYear)]
### Make some ad-hoc corrections for major M&A
## Basically AltDG tells me if something is currently a subsidiary,
# which is helpful for understanding entire history of ownership, but
# really I need to go back and manually ensure that the data is correct.
# Still, this is MUCH easier than just going with the initial list of names.
# Still need to figure out wtf is going on with AOL / Time Warner/ Verizon / Netscape
matched[ name == "merrill lynch" & joinYear <= 2012, `:=` (gvkey = 7267, tic = "BAC2", conml = "Merrill Lynch & Co Inc", naics = 523110, state = "NY", city = "New York", cusip = "59098Z002")]
matched[ name == "ca technologies" & joinYear <= 2018, `:=` (gvkey = 3310, tic = "CA", conml = "CA Inc", naics = 511210, state = "NY", city = "New York", cusip = "12673P105")]
matched[ name == "bell labs" | name == "bell laboratories" | name == "at&t bell laboratories" & joinYear <= 1996, `:=` (gvkey = 9899, tic = "T", conml = "AT&T Inc", naics = 517210, state = "TX", city = "Dallas", cusip = "00206R102")]
matched[ name == "bell labs" | name == "bell laboratories" | name == "at&t bell laboratories" & joinYear > 1996 & joinYear <= 2006, `:=` (gvkey = 62599, tic = "LU", conml = "Lucent Technologies", naics = 541512, state = "NJ", city = "New Providence", cusip = "549463107")]
matched[ name == "bell labs" | name == "bell laboratories" | name == "at&t bell laboratories" & joinYear > 2006 & joinYear <= 2015, `:=` (gvkey = 101352, tic = "ALU", conml = "Alcatel-Lucent", naics = 334210, state = "", city = "Boulogne-Billancourt", cusip = "013904305")]
matched[ name == "bell labs" | name == "bell laboratories" | name == "at&t bell laboratories" & joinYear > 2015, `:=` (gvkey = 23671, tic = "NOK", conml = "Nokia Corp", naics = 334220, state = "", city = "Espoo", cusip = "654902204")]
matched[ name == "alcatel" , gvkey := 101352]
matched[ name == "compaq" & joinYear <= 2001, `:=` (gvkey = 3282, tic = "CPQ.2", conml = "Compaq Computer Corp", naics = 334111, state = "TX", city = "Houston", cusip = "204493100")]
matched[ name == "appnexus" & joinYear <= 2018, gvkey := NA]
matched[ name == "netscape" & joinYear <= 1997, gvkey := 61143]
# For some reason, amd was getting matched to something totally wrong...
matched[ name == "amd", gvkey := 1161]
matched[ name == "covidien" & joinYear < 2015 , gvkey := 177264]
matched[ name == "lsi logic" & joinYear < 2014, gvkey := 60914]
matched[ name == "network associates", gvkey := 25783]
matched[ name == "hughes network systems", gvkey := 11206]
matched[ name == "soasta", gvkey := NA]
matched[ name == "storagetek" & joinYear <= 2004, gvkey := NA ]
matched[ name == "storagetek" & joinYear > 2005 & joinYear <= 2009, gvkey := 12136] # acquisition by Sun
matched[ name == "storagetek" & joinYear > 2009, gvkey := 12142] # acquisition by Oracle
matched[ name == "tumblr" & joinYear < 2014, gvkey := NA]
matched[ name == "tumblr" & joinYear >=  2014, gvkey := 62634]  # Acquisition by Yahoo
matched[ name == "tumblr" & joinYear >=  2018, gvkey := 2136]  # Acquisition by Verizon
matched[ name == "dow jones" & joinYear <= 2007, gvkey := 4062] # Pre acquisition by News Corp
matched[ name == "endeca" & joinYear <= 2011, gvkey := NA]  # Private before acquisition by Oracle
matched[ name == "homeaway.com" & joinYear >= 2006 & joinYear <= 2015, gvkey := 186714] # HomeAway.com was public before being acquired by Expedia
matched[ name == "huffington post" & joinYear <= 2011, gvkey := NA] # Huffington post was private before being acquired by AOL
matched[ name == "the active network" & joinYear <= 2013, gvkey := 160281] # Before being acquired, it was public
matched[ name == "websidestory" & joinYear <= 2008, gvkey := 140050] # Publicly listed
matched[ name == "websidestory" & joinYear > 2008 & joinYear <= 2010, gvkey := 174871] # Bought by Omniture
matched[ name == "websidestory" & joinYear > 2010, gvkey := 12540] # Bought by Adobe
matched[ name == "yousendit", gvkey := NA]   # Not acquired until 2018, so null for me
matched[ name == "accelops" & joinYear <= 2018, gvkey := NA]  # Private
matched[ name == "airclic" & joinYear <= 2016, gvkey := NA] # Private
matched[ name == "apollo group" & joinYear <= 2017, gvkey := 31122]  # Apollo Education Group before being acuqired by Apollo Group
matched[ name == "arbor networks" & joinYear <= 2011, gvkey := NA] # Private
matched[ name == "arbor networks" & joinYear > 2011 & joinYear <= 2016, gvkey := 3735]  # Owned by Danaher Corporation
matched[ name == "aster data systems" & joinYear <= 2012, gvkey := NA]  #Private before acquisition
matched[ name == "bleacher report" & joinYear <= 2013, gvkey := NA]  #Private before acquisition
matched[ name == "business objects" & joinYear <= 2008, gvkey := NA]  #Private before acquisition
matched[ name == "emptoris" & joinYear <= 2013, gvkey := NA]  #Private before acquisition
matched[ name == "goldengate software" & joinYear <= 2010, gvkey := NA]  #Private before acquisition
matched[ , count := NULL]
matched[ , globCount := NULL]
setkey(EntitiesPrevEmployers,PreviousEmployer,joinYear)
setkey(matched,name,joinYear)
parentsSpinouts <- matched[EntitiesPrevEmployers]
parentsSpinouts <- parentsSpinouts[!is.na(gvkey)]
temp <- parentsSpinouts[globCount >= 8]
fwrite(temp,"data/parentsSpinouts.csv")
View(temp)
#------------------------------------------------#
#
# File name: linkBiosToCompustat2.R
#
# Author: Nicolas Fernandez-Arias
#
# Purpose:
#
# This script links EntityNames to the Compustat database
# to find parent firms.
#------------------------------------------------#
rm(list = ls())
library(data.table)
library(lubridate)
compustatFirmsSegments <- fread("data/compustat/firmsSegments.csv")
compustatFirmsSegments[tic == "IBM", conml := "IBM"]
compustatFirmsSegments[tic == "GS", conml := "Goldman Sachs"]
compustatFirmsSegments[tic == "HPQ", conml := "Hewlett-Packard"]
compustatFirmsSegments[snms == "HP", snms := ""]
compustatFirmsSegments <- compustatFirmsSegments[ , .(gvkey,state,city,cusip,naics,NAICSS1,NAICSS2,dataYear,conml,snms,tic)]
compustatFirmsSegments[ , conml := gsub("[.]$","",conml), by = gvkey]
compustatFirmsSegments[ , conml := gsub("( Inc| Corp| LLC| Ltd| Co| LP)$","",conml), by = gvkey]
compustatFirmsSegments[ , conml := tolower(conml)]
EntitiesPrevEmployers <- fread("data/VentureSource/EntitiesPrevEmployers.csv")[foundingYear >= 1986]
#EntitiesPrevEmployers[ , foundingYear := pmin(na.omit(year(ymd(JoinDate))),na.omit(year(ymd(StartDate)))), by = .(EntityID)]
EntitiesPrevEmployers[ , joinYear := as.integer(year(ymd(JoinDate)))]
EntitiesPrevEmployers[ is.na(joinYear) , joinYear := foundingYear]
EntitiesPrevEmployers <- EntitiesPrevEmployers[!is.na(PreviousEmployer) & PreviousEmployer != ""]
## Prepare data
EntitiesPrevEmployers <- EntitiesPrevEmployers[, .(EntityID,founder2,EntityName,IndustryCodeDesc,SubcodeDesc,foundingYear,FirstName,LastName,joinYear,Title,TitleCode,PreviousEmployer)]
EntitiesPrevEmployers[ PreviousEmployer == "Cisco", PreviousEmployer := "Cisco Systems"]
EntitiesPrevEmployers[ PreviousEmployer == "Amazon", PreviousEmployer := "Amazon.com"]
EntitiesPrevEmployers[ PreviousEmployer == "Yahoo" | PreviousEmployer == "Yahoo!", PreviousEmployer :=  "Verizon"]
EntitiesPrevEmployers[ , PreviousEmployer := gsub("( )?(_x000D_)?(\n)?( )?(_x000D_)?(\n)?( )?_x000D_\n$","",PreviousEmployer), by = PreviousEmployer]
EntitiesPrevEmployers[ , PreviousEmployer := gsub("[.]$","",PreviousEmployer), by = PreviousEmployer]
EntitiesPrevEmployers[ , PreviousEmployer := gsub("( Inc| Corp| LLC| Ltd| Co| LP)$","",PreviousEmployer), by = PreviousEmployer]
EntitiesPrevEmployers[ , PreviousEmployer := gsub("[ ]?[(].*[)]$","",PreviousEmployer), by = PreviousEmployer]
EntitiesPrevEmployers[ , PreviousEmployer := gsub("^Google.*$","Google",PreviousEmployer), by = PreviousEmployer]
EntitiesPrevEmployers[ , PreviousEmployer := tolower(PreviousEmployer)]
# Initial merge
firms <- unique(compustatFirmsSegments,by = "gvkey")[ , .(gvkey,conml,tic,cusip,state,city,naics) ]
EntitiesPrevEmployers[ , count := .N, by = c("PreviousEmployer","joinYear")]
EntitiesPrevEmployers[ , globCount := .N, by = PreviousEmployer]
prevEmployers <- unique(EntitiesPrevEmployers, by = c("PreviousEmployer","joinYear"))[ , .(PreviousEmployer,joinYear,count,globCount)]
#setkey(prevEmployers,PreviousEmployer)
setkey(firms,conml)
firmsPrevEmployers <- firms[,.(gvkey,conml)][prevEmployers]
matched <- firmsPrevEmployers[ !is.na(gvkey)][ , .(gvkey,conml,joinYear,count,globCount)]
unmatched <- firmsPrevEmployers[ is.na(gvkey)][ , .(conml,joinYear,count,globCount)]
matched[ , source := "regex"]
## Merge using compustat segments data
segments <- unique(compustatFirmsSegments, by = "snms")[ , .(gvkey,snms)]
segments[ , snms := tolower(snms)]
setkey(segments,snms)
#setkey(unmatched,conml)
unmatched <- segments[unmatched]
matchedSegments <- unmatched[!is.na(gvkey)]
unmatched <- unmatched[is.na(gvkey)][ , .(snms,joinYear,count,globCount)]
matchedSegments[ , source := "compustat segments"]
firmsTickers <- fread("data/firmsTickersAltDG.csv")
firmsTickers[, query := tolower(query)]
firmsTickers <- unique(firmsTickers, by = "query")
setkey(firmsTickers,query)
unmatched <- firmsTickers[unmatched]
matchedQueries <- unmatched[!is.na(Ticker)]
unmatched <- unmatched[is.na(Ticker)][ , .(query,joinYear,count,globCount)]
matchedQueries[ , source := "altdg"]
# Merge matched queries to firms via ticker symbol
setkey(matchedQueries,Ticker)
setkey(firms,tic)
matchedQueries <- firms[matchedQueries][, .(gvkey,query,count,globCount,joinYear,source)][ !is.na(gvkey)]
## Change names to query
setnames(matched,"conml","name")
setnames(matchedSegments,"snms","name")
setnames(matchedQueries,"query","name")
matched <- rbind(matched,matchedSegments,matchedQueries)
#matched <- rbind(matched,matchedSegments)
### Now match back to EntitiesPrevEmployers
setkey(matched,gvkey)
setkey(firms,gvkey)
matched <- firms[matched]
### Check matches for accuracy
library(stringdist)
# First build matches that are not due to regex
matchedDist <- matched[stringdist(conml,name) > 0]
# Remove matches where one string is a subset of the other
matchedDist <- matchedDist[mapply(grepl,conml,name) == FALSE & mapply(grepl,name,conml) == FALSE]
# Next order by largest count
matchedDist <- matchedDist[order(-globCount,name,joinYear)]
### Make some ad-hoc corrections for major M&A
## Basically AltDG tells me if something is currently a subsidiary,
# which is helpful for understanding entire history of ownership, but
# really I need to go back and manually ensure that the data is correct.
# Still, this is MUCH easier than just going with the initial list of names.
# Still need to figure out wtf is going on with AOL / Time Warner/ Verizon / Netscape
View(matched)
View(matched)
prepareDataForStata.R
library(data.table)
library(lubridate)
rm(list = ls())
setwd("~/nfernand@princeton.edu/PhD - Thesis/Research/Endogenous-growth-with-spinouts/empirics")
# Next, prepare the data for panel regressions in Stata
source("code/prepareDataForStata.R")
data[ , xrd_pas5 := Reudce(`+`, shift(xrd,0L:4L,type = "lag")), by = gvkey]
data[ , xrd_pas5 := Reduce(`+`, shift(xrd,0L:4L,type = "lag")), by = gvkey]
fwrite(data,"data/compustat-spinouts_Stata.csv")
rm(list = ls())
parentsSpinouts <- fread("data/parentsSpinoutsWSO.csv")
# Compute number of founders who are from parent firms in data set
parentsSpinouts[ , numSpinoutFounders := .N, by = "EntityID"]
# Extract dataset on first funding valuation and founding year for each spinout
firstFundings <- fread("data/VentureSource/firstFundingEvents.csv")[ , .(EntityID,discountedFFValue,foundingYear)]
EntitiesNumFounders <- fread("data/VentureSource/EntitiesNumFounders.csv")
# Only take one record pe r EntityID - just need to be able to flag that
# it is a spinout in the later calculations
parentsSpinouts <- unique(parentsSpinouts, by = "EntityID")[, .(gvkey,EntityID,numSpinoutFounders,wso1,wso2,wso3,wso4)]
# Merge funding information with parent firm - spinout link
setkey(firstFundings,EntityID)
setkey(parentsSpinouts,EntityID)
parentsSpinoutsFF <- parentsSpinouts[firstFundings]
parentsSpinoutsFF <- parentsSpinoutsFF[!is.na(foundingYear)]
# Label spinouts and non-spinouts
parentsSpinoutsFF[!is.na(gvkey) , isSpinout := 1]
parentsSpinoutsFF[is.na(isSpinout), isSpinout := 0]
# Replace NA values with zero
parentsSpinoutsFF[ is.na(discountedFFValue), discountedFFValue := 0]
# First, flag entities as spinouts or non-spinouts
parentsSpinoutsFF[ wso1 + wso2 + wso3 + wso4 == 0 & isSpinout == 1, nonwsoSpinout := 1]
parentsSpinoutsFF[ is.na(nonwsoSpinout), nonwsoSpinout := 0]
parentsSpinoutsFF[ wso4 == 0 & isSpinout == 1, nonwso4Spinout := 1]
parentsSpinoutsFF[ is.na(nonwso4Spinout) , nonwso4Spinout := 0]
parentsSpinoutsFF[ isSpinout == 0, nonSpinout := 1]
parentsSpinoutsFF[ is.na(nonSpinout) , nonSpinout := 0]
setkey(parentsSpinoutsFF,EntityID)
setkey(EntitiesNumFounders,EntityID)
parentsSpinoutsFF <- EntitiesNumFounders[parentsSpinoutsFF]
parentsSpinoutsFF[ , fracSpinoutFounders := numSpinoutFounders / numFounders]
parentsSpinoutsFF[ nonSpinout == 1, `:=` (wso1 = 0, wso2 = 0, wso3 = 0, wso4 = 0, nonwso4Spinout = 0, nonwsoSpinout = 0)]
spinoutCounts <- parentsSpinoutsFF[ , .(wso1 = sum(na.omit(fracSpinoutFounders * wso1)) , wso2 = sum(na.omit(fracSpinoutFounders * wso2)) ,
wso3 = sum(na.omit(fracSpinoutFounders * wso3)) , wso4 = sum(na.omit(fracSpinoutFounders * wso4)) ,
nonwso = sum(na.omit(fracSpinoutFounders * nonwsoSpinout)), nonwso4 = sum(na.omit(fracSpinoutFounders *nonwso4Spinout)),
nonspinout = .N - sum(na.omit(fracSpinoutFounders * wso1)) - sum(na.omit(fracSpinoutFounders * nonwsoSpinout))) , by = "foundingYear" ]
founderCounts <- parentsSpinoutsFF[ , .(wso1 = sum(na.omit(numSpinoutFounders * wso1)) , wso2 = sum(na.omit(numSpinoutFounders * wso2)) ,
wso3 = sum(na.omit(numSpinoutFounders * wso3)) , wso4 = sum(na.omit(numSpinoutFounders * wso4)) ,
nonwso = sum(na.omit(numSpinoutFounders * nonwsoSpinout)), nonwso4 = sum(na.omit(numSpinoutFounders * nonwso4Spinout)),
allspinout = sum(na.omit(numSpinoutFounders * wso1)) + sum(na.omit(numSpinoutFounders * nonwsoSpinout)),
nonspinout = sum(na.omit(numFounders)) - sum(na.omit(numSpinoutFounders * wso1)) - sum(na.omit(numSpinoutFounders * nonwsoSpinout)) ) , by = "foundingYear" ]
dffv <- parentsSpinoutsFF[ , .(wso1 = sum(na.omit(fracSpinoutFounders * discountedFFValue * wso1)) , wso2 = sum(na.omit(fracSpinoutFounders * discountedFFValue * wso2)) ,
wso3 = sum(na.omit(fracSpinoutFounders * discountedFFValue * wso3)) , wso4 = sum(na.omit(fracSpinoutFounders * discountedFFValue * wso4)) ,
nonwso = sum(na.omit(fracSpinoutFounders * discountedFFValue * nonwsoSpinout)),  nonwso4 = sum(na.omit(fracSpinoutFounders * discountedFFValue * nonwso4Spinout)),
nonspinout = sum(na.omit(discountedFFValue)) - sum(na.omit(fracSpinoutFounders * discountedFFValue * wso1)) - sum(na.omit(fracSpinoutFounders * discountedFFValue * nonwsoSpinout))) , by = "foundingYear" ]
spinoutCounts_unweighted <- parentsSpinoutsFF[ , .(wso1 = sum(na.omit(wso1)) , wso2 = sum(na.omit(wso2)) ,
wso3 = sum(na.omit(wso3)) , wso4 = sum(na.omit(wso4)) ,
nonwso = sum(na.omit(nonwsoSpinout)), nonwso4 = sum(na.omit(nonwso4Spinout)),
allspinout = sum(na.omit(wso1)) + sum(na.omit(nonwsoSpinout)),
nonspinout = .N - sum(na.omit(wso1)) - sum(na.omit(nonwsoSpinout))) , by = "foundingYear" ]
dffv_unweighted <- parentsSpinoutsFF[ , .(wso1 = sum(na.omit(discountedFFValue * wso1)) , wso2 = sum(na.omit(discountedFFValue * wso2)) ,
wso3 = sum(na.omit(discountedFFValue * wso3)) , wso4 = sum(na.omit(discountedFFValue * wso4)) ,
nonwso = sum(na.omit(discountedFFValue * nonwsoSpinout)), nonwso4 = sum(na.omit(discountedFFValue * nonwso4Spinout)),
nonspinout = sum(na.omit(discountedFFValue * (1 - wso1 - nonwsoSpinout)))) , by = "foundingYear" ]
avg_countRatio_weighted <- spinoutCounts[ , mean((wso1 + nonwso) / nonspinout) ]
avg_countRatio_unweighted <- spinoutCounts_unweighted[ , mean((wso1 + nonwso) / nonspinout) ]
avg_countRatio_wso4_weighted <- spinoutCounts[ , mean((wso4) / nonspinout) ]
avg_countRatio_wso4_unweighted <- spinoutCounts_unweighted[ , mean((wso4) / nonspinout) ]
avg_founderRatio <- founderCounts[ , mean( (wso1 + nonwso) / nonspinout)]
avg_dffvRatio_weighted <- dffv[ , mean((wso1 + nonwso) / nonspinout)]
avg_dffvRatio_unweighted <- dffv_unweighted[ , mean((wso1 + nonwso) / nonspinout)]
allCounts_ratio_weighted <- spinoutCounts[ , sum(na.omit(wso1 + nonwso)) / sum(na.omit(nonspinout))]
allCounts_ratio_unweighted <- spinoutCounts_unweighted[ , sum(na.omit(wso1 + nonwso)) / sum(na.omit(nonspinout))]
allCounts_ratio_unweighted <- spinoutCounts_unweighted[ , sum(na.omit(wso1 + nonwso)) / sum(na.omit(nonspinout))]
allCounts_ratio_wso4_weighted <- spinoutCounts[ , sum(na.omit(wso4)) / sum(na.omit(nonspinout))]
allCounts_ratio_wso4_unweighted <- spinoutCounts_unweighted[ , sum(na.omit(wso4)) / sum(na.omit(nonspinout))]
allCounts_ratio_wso3_weighted <- spinoutCounts[ , sum(na.omit(wso3)) / sum(na.omit(nonspinout))]
allCounts_ratio_wso3_unweighted <- spinoutCounts_unweighted[ , sum(na.omit(wso3)) / sum(na.omit(nonspinout))]
allCounts_ratio_wso2_weighted <- spinoutCounts[ , sum(na.omit(wso2)) / sum(na.omit(nonspinout))]
allCounts_ratio_wso2_unweighted <- spinoutCounts_unweighted[ , sum(na.omit(wso2)) / sum(na.omit(nonspinout))]
allCounts_ratio_wso1_weighted <- spinoutCounts[ , sum(na.omit(wso1)) / sum(na.omit(nonspinout))]
allCounts_ratio_wso1_unweighted <- spinoutCounts_unweighted[ , sum(na.omit(wso1)) / sum(na.omit(nonspinout))]
allCounts_ratio_weighted <- spinoutCounts[ foundingYear >= 1986 & foundingYear <= 2008, sum(na.omit(wso1 + nonwso)) / sum(na.omit(nonspinout))]
allCounts_ratio_unweighted <- spinoutCounts_unweighted[ foundingYear >= 1986 & foundingYear <= 2008, sum(na.omit(wso1 + nonwso)) / sum(na.omit(nonspinout))]
allCounts_ratio_wso4_weighted <- spinoutCounts[ foundingYear >= 1986 & foundingYear <= 2008, sum(na.omit(wso4)) / sum(na.omit(nonspinout))]
allCounts_ratio_wso4_unweighted <- spinoutCounts_unweighted[ foundingYear >= 1986 & foundingYear <= 2008, sum(na.omit(wso4)) / sum(na.omit(nonspinout))]
allCounts_ratio_wso3_weighted <- spinoutCounts[ foundingYear >= 1986 & foundingYear <= 2008, sum(na.omit(wso3)) / sum(na.omit(nonspinout))]
allCounts_ratio_wso3_unweighted <- spinoutCounts_unweighted[ foundingYear >= 1986 & foundingYear <= 2008, sum(na.omit(wso3)) / sum(na.omit(nonspinout))]
allCounts_ratio_wso2_weighted <- spinoutCounts[ foundingYear >= 1986 & foundingYear <= 2008, sum(na.omit(wso2)) / sum(na.omit(nonspinout))]
allCounts_ratio_wso2_unweighted <- spinoutCounts_unweighted[foundingYear >= 1986 & foundingYear <= 2008 , sum(na.omit(wso2)) / sum(na.omit(nonspinout))]
allCounts_ratio_wso1_weighted <- spinoutCounts[ foundingYear >= 1986 & foundingYear <= 2008, sum(na.omit(wso1)) / sum(na.omit(nonspinout))]
allCounts_ratio_wso1_unweighted <- spinoutCounts_unweighted[ foundingYear >= 1986 & foundingYear <= 2008, sum(na.omit(wso1)) / sum(na.omit(nonspinout))]
allCounts_ratio_weighted <- spinoutCounts[ , sum(na.omit(wso1 + nonwso)) / sum(na.omit(nonspinout))]
allCounts_ratio_unweighted <- spinoutCounts_unweighted[ , sum(na.omit(wso1 + nonwso)) / sum(na.omit(nonspinout))]
allCounts_ratio_wso4_weighted <- spinoutCounts[ , sum(na.omit(wso4)) / sum(na.omit(nonspinout))]
allCounts_ratio_wso4_unweighted <- spinoutCounts_unweighted[ , sum(na.omit(wso4)) / sum(na.omit(nonspinout))]
allCounts_ratio_wso3_weighted <- spinoutCounts[ , sum(na.omit(wso3)) / sum(na.omit(nonspinout))]
allCounts_ratio_wso3_unweighted <- spinoutCounts_unweighted[ , sum(na.omit(wso3)) / sum(na.omit(nonspinout))]
allCounts_ratio_wso2_weighted <- spinoutCounts[ , sum(na.omit(wso2)) / sum(na.omit(nonspinout))]
allCounts_ratio_wso2_unweighted <- spinoutCounts_unweighted[ , sum(na.omit(wso2)) / sum(na.omit(nonspinout))]
allCounts_ratio_wso1_weighted <- spinoutCounts[ , sum(na.omit(wso1)) / sum(na.omit(nonspinout))]
allCounts_ratio_wso1_unweighted <- spinoutCounts_unweighted[ , sum(na.omit(wso1)) / sum(na.omit(nonspinout))]
allFounders_ratio <- founderCounts[ , sum(na.omit(wso1 + nonwso)) / sum(na.omit(nonspinout))]
allDFFV_ratio <- dffv[ , sum(na.omit(wso1 + nonwso)) / sum(na.omit(nonspinout))]
allDFFV_ratio_unweighted <- dffv_unweighted[ , sum(na.omit(wso1 + nonwso)) / sum(na.omit(nonspinout))]
spinoutCounts <- melt(spinoutCounts, id.vars = "foundingYear", measure.vars = c("wso1","wso2","wso3","wso4","nonwso","nonwso4","nonspinout"))
founderCounts <- melt(founderCounts, id.vars = "foundingYear", measure.vars = c("wso1","wso2","wso3","wso4","nonwso","nonwso4","allspinout","nonspinout"))
dffv <- melt(dffv, id.vars = "foundingYear", measure.vars = c("wso1","wso2","wso3","wso4","nonwso","nonwso4","nonspinout"))
spinoutCounts_unweighted <- melt(spinoutCounts_unweighted, id.vars = "foundingYear", measure.vars = c("wso1","wso2","wso3","wso4","nonwso","nonwso4","allspinout","nonspinout"))
dffv_unweighted <- melt(dffv_unweighted, id.vars = "foundingYear", measure.vars = c("wso1","wso2","wso3","wso4","nonwso","nonwso4","nonspinout"))
library(ggplot2)
library(RColorBrewer)
my_palette <- brewer.pal(name="Blues",n=8)[4:9]
ggplot(data = spinoutCounts_unweighted[ variable == "nonspinout" | variable == "wso4" | variable == "nonwso4"], aes(x = foundingYear, y = value, fill = variable)) +
geom_area(position = "stack") +
scale_fill_manual(values = my_palette) +
theme(text = element_text(size=16)) +
#theme(legend.position = "none") +
ggtitle("Firm counts") +
#ggtitle("Unadjusted") +
xlim(1986,2015) +
ylab("Number of firms") +
xlab("Founding Year")
ggsave("../figures/spinouts_entrants_counts.png", plot = last_plot())
ggplot(data = founderCounts[ variable == "nonspinout" | variable == "wso4" | variable == "nonwso4"], aes(x = foundingYear, y = value, fill = variable)) +
geom_area(position = "stack") +
scale_fill_manual(values = my_palette) +
theme(text = element_text(size=16)) +
#theme(legend.position = "none") +
ggtitle("Founder counts") +
#ggtitle("Unadjusted") +
xlim(1986,2015) +
ylab("Number of founders") +
xlab("Founding Year")
ggsave("../figures/spinout_entrant_founderCounts.png", plot = last_plot())
ggplot(data = spinoutCounts[ variable == "nonspinout" | variable == "wso4" | variable == "nonwso4"], aes(x = foundingYear, y = value, fill = variable)) +
geom_area(position = "stack") +
scale_fill_manual(values = my_palette) +
theme(text = element_text(size=16)) +
#theme(legend.position = "none") +
ggtitle("Firm counts (weighted)") +
#ggtitle("Unadjusted") +
xlim(1986,2008) +
ylab("Number of firms") +
xlab("Founding Year")
ggsave("../figures/spinouts_entrants_weightedcounts.png", plot = last_plot())
ggplot(data = dffv[variable == "nonspinout" | variable == "wso4" | variable == "nonwso4"], aes(x = foundingYear, y = value, fill = variable)) +
geom_area(position = "stack") +
scale_fill_manual(values = my_palette) +
theme(text = element_text(size=16)) +
#theme(legend.position = "none") +
ggtitle("DFFV (weighted)") +
#ggtitle("Unadjusted") +
xlim(1986,2015) +
ylab("DFFV") +
xlab("Founding Year")
ggsave("../figures/spinouts_entrants_DFFV.png", plot = last_plot())
spinoutsNonSpinoutsRatio <- year_spinoutsEntrantsCounts[foundingYear >= 1986 & foundingYear <= 2008][ , sum(Spinout) / sum(nonSpinout)]
compustat <- fread("raw/compustat/compustat_annual.csv")
compustat <- compustat[indfmt=="INDL" & datafmt=="STD" & popsrc=="D" & consol=="C"]
compustat <- compustat[ , .(gvkey,fyear,datadate,state,xrd,emp,revt,intan,act,sic,naics)]
compustat <- compustat[!is.na(fyear)]
compustat[ is.na(xrd), xrd := 0]
xrdGeneratedSpinouts <- compustat[ , .(xrd = sum(xrd)), by = "fyear"]
xrdPriceIndex <- fread("raw/rdPriceIndex.csv")
xrdPriceIndex[ , year := year(ymd(DATE))]
xrdPriceAnnual <- xrdPriceIndex[ , .(priceIndex = mean(priceIndex)), by = year]
xrdPriceAnnual[ , xrdInflation := priceIndex / priceIndex[year == 2012]]
xrdPriceAnnual[ , priceIndex := NULL]
setkey(xrdPriceAnnual,year)
setkey(xrdGeneratedSpinouts,fyear)
xrdGeneratedSpinouts <- xrdPriceAnnual[xrdGeneratedSpinouts]
xrdGeneratedSpinouts[ , xrd := xrd / xrdInflation]
productivityGrowth <- fread("raw/productivityGrowth.csv")
productivityGrowth[ , Growth := 1 + Annual/100]
productivityGrowth[ , Annual := NULL]
productivityGrowth[ , cumGrowth := cumprod(Growth)]
productivityGrowth[ , growthFactor := cumGrowth / cumGrowth[Year == 2012]]
setkey(productivityGrowth,Year)
xrdGeneratedSpinouts <- productivityGrowth[xrdGeneratedSpinouts]
xrdGeneratedSpinouts[ , xrd := xrd / growthFactor ]
cpi <- fread("raw/cpi.csv")
setnames(cpi,"Year","year")
cpi[ , cpiInflation := Annual / Annual[year == 2012]]
cpi[ , Annual := NULL]
setkey(cpi,year)
dffv <- cpi[dffv]
dffv_unweighted <- cpi[dffv_unweighted]
dffv[ , value := value / cpiInflation]
dffv_unweighted[ , value := value / cpiInflation]
View(founderCounts)
source("code/linkBiosToCompustat2.R")
# Construct database of spinouts and their attributes:
# e.g. (1) whether they achieve revenue, (2) how much funding they receive, (3) whether they IPO, (4) IPO market capitalization
source("code/constructSpinoutAttributes.R")
source("code/constructSpinoutCounts.R")
# Combine with data on R&D from compustat_annual
source("code/mergeRDwithSpinoutCounts.R")
# Merge with compustat-patent data
source("code/mergePatents_RD-Spinouts.R")
# Add variable encoding whether state has been trated by non-compete enforcement
# using Jeffers' court rulings dates
source("code/addNoncompeteEnforcementChanges.R")
# Add variable encoding state-level strength of non-compete enforcement from Bishara 2011 / Starr 2018
source("code/addNoncompeteEnforcementIndices.R")
source("code/mergeFirmNCchangesToMasterData.R")
# Next, prepare the data for panel regressions in Stata
source("code/prepareDataForStata.R")
rm(list = ls())
data <- fread("data/compustat-spinouts_Stata.csv")
data[ , spinoutCount := Reduce(`+`,shift(spinoutCount,1L:2L,type="lead")), by = "gvkey"]
data[ , spinoutCountUnweighted := Reduce(`+`,shift(spinoutCountUnweighted,1L:2L,type="lead")), by = "gvkey"]
data[ , spinoutsDiscountedFFValue := Reduce(`+`,shift(spinoutsDiscountedFFValue,1L:2L,type="lead")), by = "gvkey"]
data[ , xrd_d := xrd - mean(na.omit(xrd)), by = "gvkey"]
data[ , spinoutCount_d := spinoutCount - mean(na.omit(spinoutCount)), by = "gvkey"]
data[ , spinoutCountUnweighted_d := spinoutCountUnweighted - mean(na.omit(spinoutCountUnweighted)), by = "gvkey"]
data[ , spinoutsDiscountedFFValue_d := spinoutsDiscountedFFValue - mean(na.omit(spinoutsDiscountedFFValue)), by = "gvkey"]
data[ , xrd_d := xrd_d - mean(na.omit(xrd_d)), by = c("naics4","year")]
data[ , spinoutCount_d := spinoutCount_d - mean(na.omit(spinoutCount_d)), by = c("naics4","year")]
data[ , spinoutCountUnweighted_d := spinoutCountUnweighted_d - mean(na.omit(spinoutCountUnweighted_d)), by = c("naics4","year")]
data[ , spinoutsDiscountedFFValue_d := spinoutsDiscountedFFValue_d - mean(na.omit(spinoutsDiscountedFFValue_d)), by = c("naics4","year")]
data[ , xrd_d := xrd_d - mean(na.omit(xrd_d)), by = c("State","year")]
data[ , spinoutCount_d := spinoutCount_d - mean(na.omit(spinoutCount_d)), by = c("State","year")]
data[ , spinoutCountUnweighted_d := spinoutCountUnweighted_d - mean(na.omit(spinoutCountUnweighted_d)), by = c("State","year")]
data[ , spinoutsDiscountedFFValue_d := spinoutsDiscountedFFValue_d - mean(na.omit(spinoutsDiscountedFFValue_d)), by = c("State","year")]
data[ , xrd_d := xrd_d - mean(na.omit(xrd_d)), by = "firmAge"]
data[ , spinoutCount_d := spinoutCount_d - mean(na.omit(spinoutCount_d)), by = "firmAge"]
data[ , spinoutCountUnweighted_d := spinoutCountUnweighted_d - mean(na.omit(spinoutCountUnweighted_d)), by = "firmAge"]
data[ , spinoutsDiscountedFFValue_d := spinoutsDiscountedFFValue_d - mean(na.omit(spinoutsDiscountedFFValue_d)), by = "firmAge"]
library(ggplot2)
library(RColorBrewer)
my_palette <- brewer.pal(name="Blues",n=8)[4:9]
